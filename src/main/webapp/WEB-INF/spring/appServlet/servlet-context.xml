<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.edu.main" />
	<context:component-scan base-package="com.edu.exam1" />
	<context:component-scan base-package="com.edu.exam2" />
	<context:component-scan base-package="com.edu.exam3" />
	<context:component-scan base-package="com.edu.exam4" />
	<context:component-scan base-package="com.edu.member" />
	<context:component-scan base-package="com.edu.board.dto" />
	<context:component-scan base-package="com.edu.board.controller" />
	<context:component-scan base-package="com.edu.board.service" />
	<context:component-scan base-package="com.edu.board.dao" />
	<context:component-scan base-package="com.edu.basic" />
	<context:component-scan base-package="com.edu.movie.dto"/>
	<context:component-scan base-package="com.edu.movie.controller"/>
	<context:component-scan base-package="com.edu.movie.service"/>
	<context:component-scan base-package="com.edu.movie.dao"/>
	
	<context:component-scan base-package="com.edu.common.interceptor"/>
	
	<!-- 인터셉터 설정 -->
	<!-- 인터셉터 부분에 빨간 줄이 생기면 상단에 아래 부분을 추가한다. -->
	<!-- xmlns:mvc="http://www.springframework.org/schema/mvc" -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/board/**"/>
			<mvc:mapping path="/*/*.do"/>
			<mvc:mapping path="/*/*/*.do"/>
			<beans:bean  class="com.edu.common.interceptor.ViewNameInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	
	<!-- 파일 업로드 관련한 설정 -->
	<!-- 스프링프레임워크에 내장된 CommonsMultipartResulver를 등록한다. -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 업로드할 파일의 최대용량(byte) -->
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>
	<!-- 파일 업로드를 위한 경로 설정 -->
	<!-- String uploadPath = new String("c:/upload"); -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="c:/data/upload"/>
	</beans:bean>
	
	<!-- AOP 설정 -->
	<context:annotation-config></context:annotation-config>
	
	<!-- component-scan을 이용하여 해당 패키지를 스캔하게 된다. -->
	<!-- 이 과정에서 LogAdvice가 스프릉의 Bean객체로 등록된다. -->
	<context:component-scan base-package="com.edu.aop"></context:component-scan>
	
	<!-- <aop:aspectj-autoproxy></aop:aspectj-autoproxy>를 이용해서 LogAdvice에 설정한 @Before가 동작하게 된다. -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	
</beans:beans>