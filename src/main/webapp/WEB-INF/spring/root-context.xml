<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
     <bean id="propertyPlaceholderConfigurer"
      class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="locations">
         <value>/WEB-INF/config/jdbc.properties</value>
      </property>   
   </bean>
   
   <bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
		<property name="driver"		value="${jdbc.driverClassName}"/>
		<property name="url"		value="${jdbc.url}"/>
		<property name="username"	value="${jdbc.username}"/>
		<property name="password"	value="${jdbc.password}"/>
	</bean>
   
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource"/>
     <!--   <property name="configLocation" value="classpath:mybatis/model/modelConfig.xml"/> -->
      <property name="mapperLocations" value="classpath:mybatis/mappers/*.xml"/>
   </bean>
   
   <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg ref="sqlSessionFactory"></constructor-arg>
   </bean>
   
   	<!-- AOP 설정 -->
	<context:annotation-config></context:annotation-config>
	
	<!-- component-scan을 이용하여 해당 패키지를 스캔하게 된다. -->
	<!-- 이 과정에서 LogAdvice가 스프릉의 Bean객체로 등록된다. -->
	<context:component-scan base-package="com.edu.aop"></context:component-scan>
	
	<!-- <aop:aspectj-autoproxy></aop:aspectj-autoproxy>를 이용해서 LogAdvice에 설정한 @Before가 동작하게 된다. -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
   
</beans>
